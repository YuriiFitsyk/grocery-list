{"version":3,"sources":["components/GoodsForm/GoodsForm.js","components/GoodsList/GoodsList.js","App.js","reportWebVitals.js","index.js"],"names":["GoodsForm","addGood","useState","goodName","setGoodName","goodPriority","setGoodPriority","goodStatus","setGoodStatus","goodStatusChange","setGoodStatusChange","className","onSubmit","e","preventDefault","htmlFor","id","placeholder","value","onChange","target","changeDate","Date","toDateString","toLocaleTimeString","type","GoodsList","App","goods","setGoods","good","prevGoods","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAMaA,EAAY,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRC,mBAAS,IADD,mBACjCC,EADiC,KACvBC,EADuB,OAEAF,mBAAS,GAFT,mBAEjCG,EAFiC,KAEnBC,EAFmB,OAGJJ,mBAAS,QAHL,mBAGjCK,EAHiC,KAGrBC,EAHqB,OAIQN,mBAAS,IAJjB,mBAIjCO,EAJiC,KAIfC,EAJe,KAOxC,OACE,uBACEC,UAAU,aACVC,SAAU,SAACC,GACTA,EAAEC,iBAEFb,EAAQ,CACNE,WACAE,eACAE,aACAE,qBAGFL,EAAY,IACZE,EAAgB,GAChBE,EAAc,QACdE,EAAoB,KAfxB,0BAoBE,wBAAOK,QAAQ,YAAf,sBAGE,uBACEC,GAAG,YACHC,YAAY,YACZC,MAAOf,EACPgB,SAAU,SAACN,GAAD,OAAOT,EAAYS,EAAEO,OAAOF,aAI1C,wBAAOH,QAAQ,gBAAf,0BAGE,yBACEC,GAAG,gBACHE,MAAOb,EACPc,SAAU,SAACN,GAAD,OAAOP,EAAgBO,EAAEO,OAAOF,QAH5C,UAKE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,qBAIJ,wBAAOH,QAAQ,cAAf,wBAGE,yBACEC,GAAG,cACHE,MAAOX,EACPY,SAAU,SAACN,GACTL,EAAcK,EAAEO,OAAOF,OACvB,IAAMG,EAAa,IAAIC,KACvBZ,EACEW,EAAWE,eACT,KACAF,EAAWG,uBATnB,UAaE,wBAAQN,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,2BAIJ,wBAAQO,KAAK,SAAb,4BClFOC,EAAY,WACvB,OACE,yB,MCkBWC,MAff,WAAgB,IAAD,EACazB,mBAAS,IADtB,mBACN0B,EADM,KACCC,EADD,KAOb,OACE,sBAAKlB,UAAU,MAAf,UACE,cAAC,EAAD,CAAWiB,MAAOA,EAAO3B,QANb,SAAC6B,GACfD,GAAS,SAAAE,GAAS,4BAAQA,GAAR,CAAmBD,UAMnC,cAAC,EAAD,CAAWF,MAAOA,QCHTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d329df38.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./GoodsForm.css\";\n\n\nexport const GoodsForm = ({ addGood }) => {\n  const [goodName, setGoodName] = useState('');\n  const [goodPriority, setGoodPriority] = useState(1);\n  const [goodStatus, setGoodStatus] = useState('Have');\n  const [goodStatusChange, setGoodStatusChange] = useState('');\n  \n\n  return (\n    <form \n      className=\"goods-form\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        addGood({\n          goodName,\n          goodPriority,\n          goodStatus,\n          goodStatusChange,\n        });\n\n        setGoodName('');\n        setGoodPriority(1);\n        setGoodStatus('Have');\n        setGoodStatusChange('');\n      }}\n    >\n      Add your good\n\n      <label htmlFor=\"good-name\">\n        Name:&nbsp;\n\n        <input\n          id=\"good-name\"\n          placeholder=\"Good name\"\n          value={goodName}\n          onChange={(e) => setGoodName(e.target.value)}\n        />\n      </label>\n\n      <label htmlFor=\"good-priority\">\n        Priority:&nbsp;\n\n        <select\n          id=\"good-priority\"\n          value={goodPriority}\n          onChange={(e) => setGoodPriority(e.target.value)}\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n        </select>\n      </label>\n\n      <label htmlFor=\"good-status\">\n        Status:&nbsp;\n\n        <select\n          id=\"good-status\"\n          value={goodStatus}\n          onChange={(e) => {\n            setGoodStatus(e.target.value);\n            const changeDate = new Date();\n            setGoodStatusChange(\n              changeDate.toDateString() \n              + ', ' \n              + changeDate.toLocaleTimeString()\n            );\n          }}\n        >\n          <option value=\"Have\">Have</option>\n          <option value=\"Run out\">Run out</option>\n        </select>\n      </label>\n\n      <button type=\"submit\">\n        Add a good\n      </button>\n    </form>\n  )\n};\n\nGoodsForm.propTypes = {\n  addGood: PropTypes.func.isRequired,\n}","export const GoodsList = () => {\n  return (\n    <div>\n      \n    </div>\n  )\n};","import React, { useState } from \"react\";\nimport { GoodsForm } from './components/GoodsForm';\nimport { GoodsList } from './components/GoodsList';\nimport './App.css';\n\nfunction App() {\n  const [goods, setGoods] = useState([]);\n\n  const addGood = (good) => {\n    setGoods(prevGoods => [...prevGoods, good])\n  }\n\n  return (\n    <div className=\"App\">\n      <GoodsForm goods={goods} addGood={addGood}/>\n      <GoodsList goods={goods}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}